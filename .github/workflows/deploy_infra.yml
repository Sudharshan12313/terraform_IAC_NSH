name: Deploy AWS Infrastructure with Terraform

on:
  #push:
  #  branches:
  #    - main
  workflow_dispatch:

jobs:
  terraform:
    name: Deploy Terraform
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.5

      - name: Initialize Terraform
        run: terraform init
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}


      - name: Validate Terraform
        run: terraform validate
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}


      - name: Generate Terraform Plan
        id: plan
        run: terraform plan -out=tfplan
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}


      - name: Generate Markdown with Terraform Docs
        uses: terraform-docs/gh-actions@v1.3.0
        with:
          working-dir: .
          output-file: README.md
          output-method: inject
          git-push: true

      - name: Commit and Push Changes to README.md
        run: |
           git config --global user.name "Sudharshan12313"
           git config --global user.email "sudhanew322@gmail.com"
           git add README.md
           git commit -m "Update README.md with Terraform Docs"
           git push https://x-access-token:${{ secrets.PAT_TOKEN }}@github.com/terraform_IAC_NSH HEAD:main
        env:
          GH_TOKEN: ${{ secrets.PAT_TOKEN }}


  terraform-docs:
    name: Generate Terraform Docs for PRs
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Generate Markdown with Terraform Docs
        uses: terraform-docs/gh-actions@v1.3.0
        with:
          output-file: README.md
          output-method: inject
          config-file: .terraform-docs.yml

      - name: Create Pull Request Comment
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.payload.pull_request.number,
              body: 'Terraform Docs have been updated. Please review the changes.'
            })
            
      - name: Apply Terraform on Merge
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
        run: terraform apply -auto-approve tfplan
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }} 
